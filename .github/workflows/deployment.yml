name: deployment

on:
  push:
    branches: [main]

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Configure SSH
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_ed25519
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        ssh-keyscan -H "${{ secrets.SSH_HOST }}" > ~/.ssh/known_hosts
    - name: Update the bot
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
        cd /opt/antijob_bot
        && git fetch
        && git reset --hard origin/main
        && systemctl --user daemon-reload
        && systemctl --user restart antijob_bot"
    - name: Cleanup
      run: rm -r ~/.ssh


name: CI

on:
  push:
    branches:
      - main
jobs:
  check-secrets:
    name: Check for exposed secrets
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - run: |
          docker run --rm --name=deepfence-secretscanner \
            -v $(pwd):/deepfence/mnt \
            deepfenceio/deepfence_secret_scanner:latest \
            --host-mount-path /deepfence/mnt --local /deepfence/mnt
  build:
    name: Build production
    runs-on: [ 'self-hosted', 'antijob-bot', 'production' ]
    needs:
      - check-secrets
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Prepare .env
        run: |
          cd app
          cp .env.example .env
          sed -i \
            -e "s,^TOKEN=.*,TOKEN=${TOKEN}," \
            -e "s,^DB_PASSWORD=.*,DOMAIN=${SENTRY_DNS}," \
            -e "s,^ADMINS=.*,ADMINS=${ADMINS}," \
            -e "s,^FEEDBACK_CHAT_ID=.*,FEEDBACK_CHAT_ID=${FEEDBACK_CHAT_ID}," \
          .env
        env:
          TOKEN: "${{ secrets.TOKEN }}"
          DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
          ADMINS: "${{ secrets.ADMINS }}"
          FEEDBACK_CHAT_ID: "${{ secrets.FEEDBACK_CHAT_ID }}"
      - name: Build image
        run: docker-compose build

  start:
    name: Start production
    needs:
      - build
    runs-on: [ 'self-hosted', 'antijob-bot', 'production' ]
    steps:
      - name: Approve deployment
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: Vldln,person63846
          minimum-approvals: 1

      - name: Start the app
        run: |
          docker-compose up -d